@model IEnumerable<AddressBook.Models.Person>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


<!--    Tab Navigation
        This will render a tabbed inteface that sorts the address entries alphabetically
 -->
<div class="container" id="address-book">
    <ul class="nav nav-tabs nav-fill" id="address-tabs">

        @for (char c = 'A'; c <= 'Z'; c++)  //Automatically create tabs from every letter
        {
            if (c == 'A') //first nav-item needs to implement the .active style class
            {
                <li class="nav-item"><a class="nav-link active" data-toggle="tab" href="#A">A</a></li>
            }
            else
            {
                string sect = "sect" + c;
                <li class="nav-item"><a class="nav-link" data-toggle="tab" href="@sect">@c</a></li>
            }
        }
    </ul>

    <!-- Tab Content -->
    <div class="tab-content page-content">
        <!--
        for each tab render content pane including table heading
         -->
        <div class="tab-pane container active" id="A">
            <h2>ADDRESS ENTRIES A </h2>
        </div>
    </div>
</div>

<!--  LIST ADDRESS DATA  -->
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name","Index",new {sortOrder = ViewBag.LastNameSortParam })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParam })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Province)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PostCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumMain)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumCell)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Province)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumMain)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumCell)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
