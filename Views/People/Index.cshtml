@model IEnumerable<AddressBook.Models.Person>
@using AddressBook.Utilities

@{
    ViewBag.Title = "Address Book";
    var tabID = "";
}

<h2>Address Book Index</h2>

@Html.ActionLink("Create New", "Create", new { TabID = ViewBag.TabID }, new { @class = "btn btn-secondary" })


<!--    This will render a bootstrap tab ribbon with tabs for each letter from a-z  -->
<ul class="nav nav-tabs nav-justified" style="margin-top:20px" role="tablist" id="address-tabs">

    @for (char c = 'A'; c <= 'Z'; c++)
    {
        tabID = Char.ToString(c);   //  Needs to be string for controller to check for NULLorEmpty

        //  selected tab is made active manually by checking with the TabActive function found in Utilities/Utilities.cs
        <li class="nav-item tab-item @Html.TabActive(tabID)" id="@tabID">
            @Html.ActionLink(tabID, "Index", new { TabID = tabID },
            new { @class = "nav-link tab-link" })
        </li>

    }
</ul>

<!-- Tab Pane Content -->
<div class="tab-content page-content">
    <div class="tab-pane show active" role="tabpanel">
        @Html.Partial("AddressTable", Model)
    </div>
</div>

@section scripts
{
    <script>
        // DELETE ITEM
        $(document).ready(function () {
            $("#people .js-delete").on("click", function () {
                var button = $(this);
                if (confirm("Are you sure you want to delete this entry? ")) {
                    $.ajax({
                        url: "/api/people/" + button.attr("data-person-id"),
                        method: "DELETE",
                        success: function () {
                            button.parents("tr").remove();
                        }
                    });
                }
            });
        });
    </script>
}

