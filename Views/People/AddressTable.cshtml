@model IEnumerable<AddressBook.Models.Person>
@*
    Address Table Parial View:
    Serves as a template that will render a table of Addresses
    based on Model data passed from the calling View
*@

@{ 
    string tabID = ViewBag.TabID;
}
<table id="people" class="table">
    <tr>
        <th>Last Name</th>
        <th>First Name</th>
        <th>Address</th>
        <th>City</th>
        <th>Province</th>
        <th>Postal Code</th>
        <th>Phone: Main</th>
        <th>Phone: Cell</th>
        <th>Email</th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.LastName)</td>
            <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.Address)</td>
            <td>@Html.DisplayFor(modelItem => item.City)</td>
            <td>@Html.DisplayFor(modelItem => item.Province)</td>
            <td>@Html.DisplayFor(modelItem => item.PostCode)</td>
            <td>@Html.DisplayFor(modelItem => item.PhoneNumMain)</td>
            <td>@Html.DisplayFor(modelItem => item.PhoneNumCell)</td>
            <td>@Html.DisplayFor(modelItem => item.Email)</td>
            <td>
                <div class="btn-group" role="group" aria-label="Basic example">
                    @Html.ActionLink("Edit", "Edit",new { id = item.Id , TabID = tabID},new { @class = "btn btn-outline-primary" })
                    @Html.ActionLink("Details", "Details", new { id = item.Id, TabID = tabID }, new { @class = "btn btn-outline-info" })
                    <button data-person-id="@item.Id" class="btn btn-outline-danger js-delete">Delete</button>
                </div>
            </td>
        </tr>
    }
</table>
  